{
  "reportTitle": "edu-front-util",
  "stats": {
    "suites": 33,
    "tests": 38,
    "passes": 38,
    "pending": 0,
    "failures": 0,
    "start": "2016-05-06T11:16:45.518Z",
    "end": "2016-05-06T11:16:45.577Z",
    "duration": 59,
    "testsRegistered": 38,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "arrayUtil",
        "suites": [
          {
            "title": "#arrayUtil._$arrContains()",
            "suites": [],
            "tests": [
              {
                "title": "返回true，当数组包含给定的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrContains() 返回true，当数组包含给定的数值",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],-<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">false</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">true</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-string\">\"qq\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\" \"</span>],<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>],<span class=\"hljs-string\">\"\"</span>));",
                "isRoot": false,
                "uuid": "5fb054a8-2271-4b9b-97d2-1932a14c90ae",
                "parentUUID": "d22b90b1-8922-4762-bce0-0ff6d000b769",
                "skipped": false
              },
              {
                "title": "返回false，当数组不包含给定的值",
                "fullTitle": "arrayUtil #arrayUtil._$arrContains() 返回false，当数组不包含给定的值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-string\">\"aa\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],-<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\"aa\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\"\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">true</span>));",
                "isRoot": false,
                "uuid": "51d1d69b-e1c2-4bac-ba02-88b34fe23d28",
                "parentUUID": "d22b90b1-8922-4762-bce0-0ff6d000b769",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\arrayUtil.test.js",
            "uuid": "d22b90b1-8922-4762-bce0-0ff6d000b769",
            "fullFile": "D:\\work\\edu-front-util\\test\\arrayUtil.test.js",
            "passes": [
              {
                "title": "返回true，当数组包含给定的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrContains() 返回true，当数组包含给定的数值",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],-<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">false</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">true</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-string\">\"qq\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\" \"</span>],<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>],<span class=\"hljs-string\">\"\"</span>));",
                "isRoot": false,
                "uuid": "5fb054a8-2271-4b9b-97d2-1932a14c90ae",
                "parentUUID": "d22b90b1-8922-4762-bce0-0ff6d000b769",
                "skipped": false
              },
              {
                "title": "返回false，当数组不包含给定的值",
                "fullTitle": "arrayUtil #arrayUtil._$arrContains() 返回false，当数组不包含给定的值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-string\">\"aa\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],-<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\"aa\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\"\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">true</span>));",
                "isRoot": false,
                "uuid": "51d1d69b-e1c2-4bac-ba02-88b34fe23d28",
                "parentUUID": "d22b90b1-8922-4762-bce0-0ff6d000b769",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#arrayUtil._$arrContainsByKey()",
            "suites": [],
            "tests": [
              {
                "title": "返回true，当对象数组包含给定的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrContainsByKey() 返回true，当对象数组包含给定的数值",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">123</span>}],<span class=\"hljs-number\">123</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">0</span>}],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">1</span>}],-<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">0.1</span>}],-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">true</span>}],<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">false</span>}],<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\" \"</span>}],<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"\"</span>}],<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"12q\"</span>}],<span class=\"hljs-string\">\"12q\"</span>,<span class=\"hljs-string\">\"name\"</span>));",
                "isRoot": false,
                "uuid": "6d678d03-360f-4599-815b-a28cb04d37a6",
                "parentUUID": "d311d886-75c6-4e08-8e3a-22c688d87ed7",
                "skipped": false
              },
              {
                "title": "返回false，当对象数组不包含给定的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrContainsByKey() 返回false，当对象数组不包含给定的数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">123</span>}],<span class=\"hljs-number\">123</span>,<span class=\"hljs-string\">\"123\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">0</span>}],<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">1</span>}],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">0.1</span>}],-<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">true</span>}],<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"true\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">false</span>}],<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"false\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\" \"</span>}],<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"\"</span>}],<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"12q\"</span>}],<span class=\"hljs-string\">\"name\"</span>,<span class=\"hljs-string\">\"12q\"</span>));",
                "isRoot": false,
                "uuid": "e318e9cf-1c27-4a43-aa1c-e394ef5c8299",
                "parentUUID": "d311d886-75c6-4e08-8e3a-22c688d87ed7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\arrayUtil.test.js",
            "uuid": "d311d886-75c6-4e08-8e3a-22c688d87ed7",
            "fullFile": "D:\\work\\edu-front-util\\test\\arrayUtil.test.js",
            "passes": [
              {
                "title": "返回true，当对象数组包含给定的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrContainsByKey() 返回true，当对象数组包含给定的数值",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">123</span>}],<span class=\"hljs-number\">123</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">0</span>}],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">1</span>}],-<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">0.1</span>}],-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">true</span>}],<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">false</span>}],<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\" \"</span>}],<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"\"</span>}],<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"12q\"</span>}],<span class=\"hljs-string\">\"12q\"</span>,<span class=\"hljs-string\">\"name\"</span>));",
                "isRoot": false,
                "uuid": "6d678d03-360f-4599-815b-a28cb04d37a6",
                "parentUUID": "d311d886-75c6-4e08-8e3a-22c688d87ed7",
                "skipped": false
              },
              {
                "title": "返回false，当对象数组不包含给定的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrContainsByKey() 返回false，当对象数组不包含给定的数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">123</span>}],<span class=\"hljs-number\">123</span>,<span class=\"hljs-string\">\"123\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">0</span>}],<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">1</span>}],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">0.1</span>}],-<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">true</span>}],<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"true\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">false</span>}],<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"false\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\" \"</span>}],<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"\"</span>}],<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"12q\"</span>}],<span class=\"hljs-string\">\"name\"</span>,<span class=\"hljs-string\">\"12q\"</span>));",
                "isRoot": false,
                "uuid": "e318e9cf-1c27-4a43-aa1c-e394ef5c8299",
                "parentUUID": "d311d886-75c6-4e08-8e3a-22c688d87ed7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#arrayUtil._$arrCross()",
            "suites": [],
            "tests": [
              {
                "title": "返回true，当数组A包含数组B中的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrCross() 返回true，当数组A包含数组B中的数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">0</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,-<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">4</span>,-<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-literal\">true</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">\"\"</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">\" \"</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">1</span>,<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[-<span class=\"hljs-number\">1</span>,<span class=\"hljs-literal\">null</span>]));",
                "isRoot": false,
                "uuid": "20a762d7-9639-4f70-919a-cc50308966f3",
                "parentUUID": "28d7879d-6e30-4305-b360-bdb60db49624",
                "skipped": false
              },
              {
                "title": "返回false，当数组A不包含数组B中的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrCross() 返回false，当数组A不包含数组B中的数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">2</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">0</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[-<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,-<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-literal\">true</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-string\">\"\"</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-string\">\" \"</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>],[<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>],[<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-literal\">null</span>]));",
                "isRoot": false,
                "uuid": "4a3dfe58-bb33-4109-9107-f35aed2654f0",
                "parentUUID": "28d7879d-6e30-4305-b360-bdb60db49624",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\arrayUtil.test.js",
            "uuid": "28d7879d-6e30-4305-b360-bdb60db49624",
            "fullFile": "D:\\work\\edu-front-util\\test\\arrayUtil.test.js",
            "passes": [
              {
                "title": "返回true，当数组A包含数组B中的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrCross() 返回true，当数组A包含数组B中的数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">0</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,-<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">4</span>,-<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-literal\">true</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">\"\"</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">\" \"</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">1</span>,<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[-<span class=\"hljs-number\">1</span>,<span class=\"hljs-literal\">null</span>]));",
                "isRoot": false,
                "uuid": "20a762d7-9639-4f70-919a-cc50308966f3",
                "parentUUID": "28d7879d-6e30-4305-b360-bdb60db49624",
                "skipped": false
              },
              {
                "title": "返回false，当数组A不包含数组B中的数值",
                "fullTitle": "arrayUtil #arrayUtil._$arrCross() 返回false，当数组A不包含数组B中的数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">2</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">0</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[-<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,-<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-literal\">true</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-string\">\"\"</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-string\">\" \"</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>],[<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>],[<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-literal\">null</span>]));",
                "isRoot": false,
                "uuid": "4a3dfe58-bb33-4109-9107-f35aed2654f0",
                "parentUUID": "28d7879d-6e30-4305-b360-bdb60db49624",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\arrayUtil.test.js",
        "uuid": "34295c7a-6492-49cb-8986-0484b031fa24",
        "fullFile": "D:\\work\\edu-front-util\\test\\arrayUtil.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "cashUtil",
        "suites": [
          {
            "title": "#cashUtil._$formatCash()",
            "suites": [],
            "tests": [
              {
                "title": "正确显示价格信息",
                "fullTitle": "cashUtil #cashUtil._$formatCash() 正确显示价格信息",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'￥3.00'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.10'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.1</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.01'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.01</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.00'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.001</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash());<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">0.00</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-literal\">null</span>));",
                "isRoot": false,
                "uuid": "6470223f-cb2d-4a21-92bf-d30c64a24c38",
                "parentUUID": "7ce46f89-7270-46a4-9a44-754d3f1eb356",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\cashUtil.test.js",
            "uuid": "7ce46f89-7270-46a4-9a44-754d3f1eb356",
            "fullFile": "D:\\work\\edu-front-util\\test\\cashUtil.test.js",
            "passes": [
              {
                "title": "正确显示价格信息",
                "fullTitle": "cashUtil #cashUtil._$formatCash() 正确显示价格信息",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'￥3.00'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.10'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.1</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.01'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.01</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.00'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.001</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash());<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">0.00</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-literal\">null</span>));",
                "isRoot": false,
                "uuid": "6470223f-cb2d-4a21-92bf-d30c64a24c38",
                "parentUUID": "7ce46f89-7270-46a4-9a44-754d3f1eb356",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#cashUtil._$formatCashNoRMB()",
            "suites": [],
            "tests": [
              {
                "title": "正确显示不带有¥的价格信息",
                "fullTitle": "cashUtil #cashUtil._$formatCashNoRMB() 正确显示不带有¥的价格信息",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'3.00'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'3.10'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.1</span>));<br>assert.equal(<span class=\"hljs-string\">'3.01'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.01</span>));<br>assert.equal(<span class=\"hljs-string\">'3.00'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.001</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB());<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">0.00</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-literal\">null</span>));",
                "isRoot": false,
                "uuid": "f22701ca-85b0-40d0-83b4-b2e5f7bea31c",
                "parentUUID": "958041cc-e216-4afe-82e4-bab325c9afed",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\cashUtil.test.js",
            "uuid": "958041cc-e216-4afe-82e4-bab325c9afed",
            "fullFile": "D:\\work\\edu-front-util\\test\\cashUtil.test.js",
            "passes": [
              {
                "title": "正确显示不带有¥的价格信息",
                "fullTitle": "cashUtil #cashUtil._$formatCashNoRMB() 正确显示不带有¥的价格信息",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'3.00'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'3.10'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.1</span>));<br>assert.equal(<span class=\"hljs-string\">'3.01'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.01</span>));<br>assert.equal(<span class=\"hljs-string\">'3.00'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.001</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB());<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">0.00</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-literal\">null</span>));",
                "isRoot": false,
                "uuid": "f22701ca-85b0-40d0-83b4-b2e5f7bea31c",
                "parentUUID": "958041cc-e216-4afe-82e4-bab325c9afed",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#cashUtil._$formatNumber()",
            "suites": [],
            "tests": [
              {
                "title": "正确格式化数值",
                "fullTitle": "cashUtil #cashUtil._$formatNumber() 正确格式化数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-number\">0.20</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">0.2</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.10</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">3.101</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.02</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">3.016</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.29</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"3.287\"</span>,<span class=\"hljs-number\">2</span>));",
                "isRoot": false,
                "uuid": "6131191f-4e05-4396-909a-87406f8a0c52",
                "parentUUID": "172e96f7-ed37-4a23-9158-6e317bd222c6",
                "skipped": false
              },
              {
                "title": "非数值类型，2位精度返回0.00",
                "fullTitle": "cashUtil #cashUtil._$formatNumber() 非数值类型，2位精度返回0.00",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"0.qw\"</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-number\">2</span>));",
                "isRoot": false,
                "uuid": "8b0511e0-e1e6-4d9c-910f-5a5c3a443c53",
                "parentUUID": "172e96f7-ed37-4a23-9158-6e317bd222c6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\cashUtil.test.js",
            "uuid": "172e96f7-ed37-4a23-9158-6e317bd222c6",
            "fullFile": "D:\\work\\edu-front-util\\test\\cashUtil.test.js",
            "passes": [
              {
                "title": "正确格式化数值",
                "fullTitle": "cashUtil #cashUtil._$formatNumber() 正确格式化数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-number\">0.20</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">0.2</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.10</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">3.101</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.02</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">3.016</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.29</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"3.287\"</span>,<span class=\"hljs-number\">2</span>));",
                "isRoot": false,
                "uuid": "6131191f-4e05-4396-909a-87406f8a0c52",
                "parentUUID": "172e96f7-ed37-4a23-9158-6e317bd222c6",
                "skipped": false
              },
              {
                "title": "非数值类型，2位精度返回0.00",
                "fullTitle": "cashUtil #cashUtil._$formatNumber() 非数值类型，2位精度返回0.00",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"0.qw\"</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-number\">2</span>));",
                "isRoot": false,
                "uuid": "8b0511e0-e1e6-4d9c-910f-5a5c3a443c53",
                "parentUUID": "172e96f7-ed37-4a23-9158-6e317bd222c6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\cashUtil.test.js",
        "uuid": "729865b9-0688-4e04-96bb-b0ede0815fa0",
        "fullFile": "D:\\work\\edu-front-util\\test\\cashUtil.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "imageUtil",
        "suites": [
          {
            "title": "#imageUtil._$scaleImage()",
            "suites": [],
            "tests": [
              {
                "title": "正确显示压缩后的图片信息",
                "fullTitle": "imageUtil #imageUtil._$scaleImage() 正确显示压缩后的图片信息",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'http://imgsize.ph.126.net/?enlarge=true&amp;imgurl=http://img1.ph.126.net/_4vld4yQzMkX7mlp-BFTVw==/4887250020728080384.jpg_450x250x1x95.jpg'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://img1.ph.126.net/_4vld4yQzMkX7mlp-BFTVw==/4887250020728080384.jpg'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));<br>assert.equal(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=450y250&amp;quality=100'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=225y142&amp;quality=100'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));<br>assert.equal(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=450y250&amp;quality=100'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));",
                "isRoot": false,
                "uuid": "d7e8a655-fc9f-4f01-8f1c-10e8fb300e56",
                "parentUUID": "9e68568d-ecd7-4946-bc13-4b076a4f8788",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\imageUtil.test.js",
            "uuid": "9e68568d-ecd7-4946-bc13-4b076a4f8788",
            "fullFile": "D:\\work\\edu-front-util\\test\\imageUtil.test.js",
            "passes": [
              {
                "title": "正确显示压缩后的图片信息",
                "fullTitle": "imageUtil #imageUtil._$scaleImage() 正确显示压缩后的图片信息",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'http://imgsize.ph.126.net/?enlarge=true&amp;imgurl=http://img1.ph.126.net/_4vld4yQzMkX7mlp-BFTVw==/4887250020728080384.jpg_450x250x1x95.jpg'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://img1.ph.126.net/_4vld4yQzMkX7mlp-BFTVw==/4887250020728080384.jpg'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));<br>assert.equal(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=450y250&amp;quality=100'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=225y142&amp;quality=100'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));<br>assert.equal(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=450y250&amp;quality=100'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));",
                "isRoot": false,
                "uuid": "d7e8a655-fc9f-4f01-8f1c-10e8fb300e56",
                "parentUUID": "9e68568d-ecd7-4946-bc13-4b076a4f8788",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\imageUtil.test.js",
        "uuid": "6afd932b-720c-466b-9566-a7d9814f69fd",
        "fullFile": "D:\\work\\edu-front-util\\test\\imageUtil.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "numUtil",
        "suites": [
          {
            "title": "#numUtil._$num10000()",
            "suites": [],
            "tests": [
              {
                "title": "超出10000显示xx.x万,否则输出数值",
                "fullTitle": "numUtil #numUtil._$num10000() 超出10000显示xx.x万,否则输出数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">\"4.1万\"</span>, numUtil._$num10000(<span class=\"hljs-number\">41023</span>));<br>assert.equal(<span class=\"hljs-string\">\"4.2万\"</span>, numUtil._$num10000(<span class=\"hljs-number\">41523</span>));<br>assert.equal(<span class=\"hljs-string\">\"4000\"</span>, numUtil._$num10000(<span class=\"hljs-number\">4000</span>));",
                "isRoot": false,
                "uuid": "9165a977-d077-4dff-84f9-c345b7a2660a",
                "parentUUID": "aa2412a3-e623-4c82-aae5-2610e1d43643",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\numUtil.test.js",
            "uuid": "aa2412a3-e623-4c82-aae5-2610e1d43643",
            "fullFile": "D:\\work\\edu-front-util\\test\\numUtil.test.js",
            "passes": [
              {
                "title": "超出10000显示xx.x万,否则输出数值",
                "fullTitle": "numUtil #numUtil._$num10000() 超出10000显示xx.x万,否则输出数值",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">\"4.1万\"</span>, numUtil._$num10000(<span class=\"hljs-number\">41023</span>));<br>assert.equal(<span class=\"hljs-string\">\"4.2万\"</span>, numUtil._$num10000(<span class=\"hljs-number\">41523</span>));<br>assert.equal(<span class=\"hljs-string\">\"4000\"</span>, numUtil._$num10000(<span class=\"hljs-number\">4000</span>));",
                "isRoot": false,
                "uuid": "9165a977-d077-4dff-84f9-c345b7a2660a",
                "parentUUID": "aa2412a3-e623-4c82-aae5-2610e1d43643",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#numUtil._$formatFileSize()",
            "suites": [],
            "tests": [
              {
                "title": "格式化文件大小，B、KB、MB、GB、TB、PB、EB、ZB、YB",
                "fullTitle": "numUtil #numUtil._$formatFileSize() 格式化文件大小，B、KB、MB、GB、TB、PB、EB、ZB、YB",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">\"0 B\"</span>,   numUtil._$formatFileSize(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">\"100 B\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">100</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 KB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">10240</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 MB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 GB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 TB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 PB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 EB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 ZB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 YB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));",
                "isRoot": false,
                "uuid": "3232fc53-5288-409a-b954-2961b87b39b8",
                "parentUUID": "e65f4545-8eef-4708-94ef-b71ad622b34b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\numUtil.test.js",
            "uuid": "e65f4545-8eef-4708-94ef-b71ad622b34b",
            "fullFile": "D:\\work\\edu-front-util\\test\\numUtil.test.js",
            "passes": [
              {
                "title": "格式化文件大小，B、KB、MB、GB、TB、PB、EB、ZB、YB",
                "fullTitle": "numUtil #numUtil._$formatFileSize() 格式化文件大小，B、KB、MB、GB、TB、PB、EB、ZB、YB",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">\"0 B\"</span>,   numUtil._$formatFileSize(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">\"100 B\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">100</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 KB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">10240</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 MB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 GB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 TB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 PB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 EB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 ZB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 YB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));",
                "isRoot": false,
                "uuid": "3232fc53-5288-409a-b954-2961b87b39b8",
                "parentUUID": "e65f4545-8eef-4708-94ef-b71ad622b34b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\numUtil.test.js",
        "uuid": "72a6fc36-7ccb-48a0-91c4-52486079c733",
        "fullFile": "D:\\work\\edu-front-util\\test\\numUtil.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "regUtil",
        "suites": [
          {
            "title": "#regUtil._$isEmail()",
            "suites": [],
            "tests": [
              {
                "title": "正确判断字符串是邮箱",
                "fullTitle": "regUtil #regUtil._$isEmail() 正确判断字符串是邮箱",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'hzshaoyy@corp.netease.com'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.com'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'807991555@qq.com'</span>));",
                "isRoot": false,
                "uuid": "6e1762ea-ae9e-4569-91b7-8e0beb624c80",
                "parentUUID": "60f6a0c5-4f17-42e7-a0df-86f0315ff636",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是邮箱",
                "fullTitle": "regUtil #regUtil._$isEmail() 正确判断字符串不是邮箱",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'hzshaoyy@corp.'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.c'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'1asd@'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'dadwasadzcs'</span>));",
                "isRoot": false,
                "uuid": "ceb24b8e-8842-4558-b906-f7d51d75b202",
                "parentUUID": "60f6a0c5-4f17-42e7-a0df-86f0315ff636",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\regUtil.test.js",
            "uuid": "60f6a0c5-4f17-42e7-a0df-86f0315ff636",
            "fullFile": "D:\\work\\edu-front-util\\test\\regUtil.test.js",
            "passes": [
              {
                "title": "正确判断字符串是邮箱",
                "fullTitle": "regUtil #regUtil._$isEmail() 正确判断字符串是邮箱",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'hzshaoyy@corp.netease.com'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.com'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'807991555@qq.com'</span>));",
                "isRoot": false,
                "uuid": "6e1762ea-ae9e-4569-91b7-8e0beb624c80",
                "parentUUID": "60f6a0c5-4f17-42e7-a0df-86f0315ff636",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是邮箱",
                "fullTitle": "regUtil #regUtil._$isEmail() 正确判断字符串不是邮箱",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'hzshaoyy@corp.'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.c'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'1asd@'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'dadwasadzcs'</span>));",
                "isRoot": false,
                "uuid": "ceb24b8e-8842-4558-b906-f7d51d75b202",
                "parentUUID": "60f6a0c5-4f17-42e7-a0df-86f0315ff636",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#regUtil._$isPhone()",
            "suites": [],
            "tests": [
              {
                "title": "正确判断字符串是手机号码",
                "fullTitle": "regUtil #regUtil._$isPhone() 正确判断字符串是手机号码",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13732215280'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13332215285'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'17757783669'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'15138712518'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13423456789'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'18023123456'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'+8618023123456'</span>));",
                "isRoot": false,
                "uuid": "9075ee97-5a91-4a5e-8733-66de0c67d23d",
                "parentUUID": "1d56548c-120a-49f4-9a5a-1cc35ce723b1",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是手机号码",
                "fullTitle": "regUtil #regUtil._$isPhone() 正确判断字符串不是手机号码",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'1373221528'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'1373221528a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'137322152801'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'dadwasadzcs'</span>));",
                "isRoot": false,
                "uuid": "7ca40862-f2a5-41eb-96ab-f623c5929eb8",
                "parentUUID": "1d56548c-120a-49f4-9a5a-1cc35ce723b1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\regUtil.test.js",
            "uuid": "1d56548c-120a-49f4-9a5a-1cc35ce723b1",
            "fullFile": "D:\\work\\edu-front-util\\test\\regUtil.test.js",
            "passes": [
              {
                "title": "正确判断字符串是手机号码",
                "fullTitle": "regUtil #regUtil._$isPhone() 正确判断字符串是手机号码",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13732215280'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13332215285'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'17757783669'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'15138712518'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13423456789'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'18023123456'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'+8618023123456'</span>));",
                "isRoot": false,
                "uuid": "9075ee97-5a91-4a5e-8733-66de0c67d23d",
                "parentUUID": "1d56548c-120a-49f4-9a5a-1cc35ce723b1",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是手机号码",
                "fullTitle": "regUtil #regUtil._$isPhone() 正确判断字符串不是手机号码",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'1373221528'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'1373221528a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'137322152801'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'dadwasadzcs'</span>));",
                "isRoot": false,
                "uuid": "7ca40862-f2a5-41eb-96ab-f623c5929eb8",
                "parentUUID": "1d56548c-120a-49f4-9a5a-1cc35ce723b1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#regUtil._$isTel()",
            "suites": [],
            "tests": [
              {
                "title": "正确判断字符串是电话号码",
                "fullTitle": "regUtil #regUtil._$isTel() 正确判断字符串是电话号码",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-4405222'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-4405222-1234'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822-1234'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'4405222'</span>));",
                "isRoot": false,
                "uuid": "6ddbccd8-2233-4d1e-994b-c5448aba11e1",
                "parentUUID": "5f3c64d2-6dfe-429d-ae50-a66ce8790b35",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是电话号码",
                "fullTitle": "regUtil #regUtil._$isTel() 正确判断字符串不是电话号码",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511a-4405222'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822-1234a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-440522a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'4405222a'</span>));",
                "isRoot": false,
                "uuid": "858358aa-bdd7-4252-9777-18cbd3f80f53",
                "parentUUID": "5f3c64d2-6dfe-429d-ae50-a66ce8790b35",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\regUtil.test.js",
            "uuid": "5f3c64d2-6dfe-429d-ae50-a66ce8790b35",
            "fullFile": "D:\\work\\edu-front-util\\test\\regUtil.test.js",
            "passes": [
              {
                "title": "正确判断字符串是电话号码",
                "fullTitle": "regUtil #regUtil._$isTel() 正确判断字符串是电话号码",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-4405222'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-4405222-1234'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822-1234'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'4405222'</span>));",
                "isRoot": false,
                "uuid": "6ddbccd8-2233-4d1e-994b-c5448aba11e1",
                "parentUUID": "5f3c64d2-6dfe-429d-ae50-a66ce8790b35",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是电话号码",
                "fullTitle": "regUtil #regUtil._$isTel() 正确判断字符串不是电话号码",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511a-4405222'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822-1234a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-440522a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'4405222a'</span>));",
                "isRoot": false,
                "uuid": "858358aa-bdd7-4252-9777-18cbd3f80f53",
                "parentUUID": "5f3c64d2-6dfe-429d-ae50-a66ce8790b35",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#regUtil._$isPositiveNum()",
            "suites": [],
            "tests": [
              {
                "title": "正确判断字符串是正整数",
                "fullTitle": "regUtil #regUtil._$isPositiveNum() 正确判断字符串是正整数",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">11110</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1111111111111110</span>));",
                "isRoot": false,
                "uuid": "cbee282d-e4d8-4524-bf23-3a0081451260",
                "parentUUID": "504ed483-dbff-4c20-82f8-3b87964a2013",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是正整数",
                "fullTitle": "regUtil #regUtil._$isPositiveNum() 正确判断字符串不是正整数",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">0.2</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">1.5</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1.3</span>));",
                "isRoot": false,
                "uuid": "15753aa2-87dc-4093-a715-d0f174cee264",
                "parentUUID": "504ed483-dbff-4c20-82f8-3b87964a2013",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\regUtil.test.js",
            "uuid": "504ed483-dbff-4c20-82f8-3b87964a2013",
            "fullFile": "D:\\work\\edu-front-util\\test\\regUtil.test.js",
            "passes": [
              {
                "title": "正确判断字符串是正整数",
                "fullTitle": "regUtil #regUtil._$isPositiveNum() 正确判断字符串是正整数",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">11110</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1111111111111110</span>));",
                "isRoot": false,
                "uuid": "cbee282d-e4d8-4524-bf23-3a0081451260",
                "parentUUID": "504ed483-dbff-4c20-82f8-3b87964a2013",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是正整数",
                "fullTitle": "regUtil #regUtil._$isPositiveNum() 正确判断字符串不是正整数",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">0.2</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">1.5</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1.3</span>));",
                "isRoot": false,
                "uuid": "15753aa2-87dc-4093-a715-d0f174cee264",
                "parentUUID": "504ed483-dbff-4c20-82f8-3b87964a2013",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#regUtil._$isQQ()",
            "suites": [],
            "tests": [
              {
                "title": "正确判断字符串是QQ号码(4-11位数字)",
                "fullTitle": "regUtil #regUtil._$isQQ() 正确判断字符串是QQ号码(4-11位数字)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'147066110'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'14706'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1470'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'3470'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'14706123'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1470612311'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'9470612311'</span>));",
                "isRoot": false,
                "uuid": "d3b4568f-8d28-4828-bec2-9b78127f01df",
                "parentUUID": "1f625b20-fb7a-42a0-9432-f345d4987a3b",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是QQ号码(4-11位数字)",
                "fullTitle": "regUtil #regUtil._$isQQ() 正确判断字符串不是QQ号码(4-11位数字)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'147'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1qweqwe'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1q2324244'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1111112324244'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'0111112'</span>));",
                "isRoot": false,
                "uuid": "2f7e7425-fb19-4079-8c95-7fcdd6890830",
                "parentUUID": "1f625b20-fb7a-42a0-9432-f345d4987a3b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\regUtil.test.js",
            "uuid": "1f625b20-fb7a-42a0-9432-f345d4987a3b",
            "fullFile": "D:\\work\\edu-front-util\\test\\regUtil.test.js",
            "passes": [
              {
                "title": "正确判断字符串是QQ号码(4-11位数字)",
                "fullTitle": "regUtil #regUtil._$isQQ() 正确判断字符串是QQ号码(4-11位数字)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'147066110'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'14706'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1470'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'3470'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'14706123'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1470612311'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'9470612311'</span>));",
                "isRoot": false,
                "uuid": "d3b4568f-8d28-4828-bec2-9b78127f01df",
                "parentUUID": "1f625b20-fb7a-42a0-9432-f345d4987a3b",
                "skipped": false
              },
              {
                "title": "正确判断字符串不是QQ号码(4-11位数字)",
                "fullTitle": "regUtil #regUtil._$isQQ() 正确判断字符串不是QQ号码(4-11位数字)",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'147'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1qweqwe'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1q2324244'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1111112324244'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'0111112'</span>));",
                "isRoot": false,
                "uuid": "2f7e7425-fb19-4079-8c95-7fcdd6890830",
                "parentUUID": "1f625b20-fb7a-42a0-9432-f345d4987a3b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\regUtil.test.js",
        "uuid": "f1ba1e3e-e35c-4a6c-bf19-d2a7d0839fc0",
        "fullFile": "D:\\work\\edu-front-util\\test\\regUtil.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "TextUtil",
        "suites": [
          {
            "title": "#TextUtil._$removeNRNBSP()",
            "suites": [],
            "tests": [
              {
                "title": "移除tab 回車 換行,多于的空格变成一个空格",
                "fullTitle": "TextUtil #TextUtil._$removeNRNBSP() 移除tab 回車 換行,多于的空格变成一个空格",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">\"q1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q1'</span>));<br>assert.equal(<span class=\"hljs-string\">\" q1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">' q1'</span>));<br>assert.equal(<span class=\"hljs-string\">\" q 1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">' q '</span> +<br>    <span class=\"hljs-string\">' 1'</span>));<br>assert.equal(<span class=\"hljs-string\">\"q 1 \"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q  1 '</span>));<br>assert.equal(<span class=\"hljs-string\">\"q 1 \"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q  1  '</span>));",
                "isRoot": false,
                "uuid": "c1dce671-22e7-46e3-83ce-79250bd234cc",
                "parentUUID": "fb472200-bd3d-41b7-8688-3243635f375a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\textUtil.test.js",
            "uuid": "fb472200-bd3d-41b7-8688-3243635f375a",
            "fullFile": "D:\\work\\edu-front-util\\test\\textUtil.test.js",
            "passes": [
              {
                "title": "移除tab 回車 換行,多于的空格变成一个空格",
                "fullTitle": "TextUtil #TextUtil._$removeNRNBSP() 移除tab 回車 換行,多于的空格变成一个空格",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">\"q1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q1'</span>));<br>assert.equal(<span class=\"hljs-string\">\" q1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">' q1'</span>));<br>assert.equal(<span class=\"hljs-string\">\" q 1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">' q '</span> +<br>    <span class=\"hljs-string\">' 1'</span>));<br>assert.equal(<span class=\"hljs-string\">\"q 1 \"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q  1 '</span>));<br>assert.equal(<span class=\"hljs-string\">\"q 1 \"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q  1  '</span>));",
                "isRoot": false,
                "uuid": "c1dce671-22e7-46e3-83ce-79250bd234cc",
                "parentUUID": "fb472200-bd3d-41b7-8688-3243635f375a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#TextUtil._$getStringLength()",
            "suites": [],
            "tests": [
              {
                "title": "正确获取字符串长度",
                "fullTitle": "TextUtil #TextUtil._$getStringLength() 正确获取字符串长度",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-number\">1</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'1'</span>));<br>assert.equal(<span class=\"hljs-number\">2</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'Aa'</span>));<br>assert.equal(<span class=\"hljs-number\">4</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'中文'</span>));<br>assert.equal(<span class=\"hljs-number\">6</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'中文CN'</span>));",
                "isRoot": false,
                "uuid": "4f8e8d0c-806f-4339-a679-02277d38e871",
                "parentUUID": "f650a519-d6b7-43a9-af0c-6d40cf39c420",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\textUtil.test.js",
            "uuid": "f650a519-d6b7-43a9-af0c-6d40cf39c420",
            "fullFile": "D:\\work\\edu-front-util\\test\\textUtil.test.js",
            "passes": [
              {
                "title": "正确获取字符串长度",
                "fullTitle": "TextUtil #TextUtil._$getStringLength() 正确获取字符串长度",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-number\">1</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'1'</span>));<br>assert.equal(<span class=\"hljs-number\">2</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'Aa'</span>));<br>assert.equal(<span class=\"hljs-number\">4</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'中文'</span>));<br>assert.equal(<span class=\"hljs-number\">6</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'中文CN'</span>));",
                "isRoot": false,
                "uuid": "4f8e8d0c-806f-4339-a679-02277d38e871",
                "parentUUID": "f650a519-d6b7-43a9-af0c-6d40cf39c420",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#TextUtil._$sliceStrByLength()",
            "suites": [],
            "tests": [
              {
                "title": "正确截断字符串，处理中英文情况",
                "fullTitle": "TextUtil #TextUtil._$sliceStrByLength() 正确截断字符串，处理中英文情况",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'qaz'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'qazwsxedc'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'中'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'中文中文中文'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'qazw'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'qazw中文'</span>,<span class=\"hljs-number\">5</span>));<br>assert.equal(<span class=\"hljs-string\">'中文C'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'中文CN'</span>,<span class=\"hljs-number\">5</span>));",
                "isRoot": false,
                "uuid": "466fd567-9c1a-4a50-ae52-a9d205b4f604",
                "parentUUID": "29e51354-a4eb-422f-a303-7bfb55a95da3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\textUtil.test.js",
            "uuid": "29e51354-a4eb-422f-a303-7bfb55a95da3",
            "fullFile": "D:\\work\\edu-front-util\\test\\textUtil.test.js",
            "passes": [
              {
                "title": "正确截断字符串，处理中英文情况",
                "fullTitle": "TextUtil #TextUtil._$sliceStrByLength() 正确截断字符串，处理中英文情况",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'qaz'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'qazwsxedc'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'中'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'中文中文中文'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'qazw'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'qazw中文'</span>,<span class=\"hljs-number\">5</span>));<br>assert.equal(<span class=\"hljs-string\">'中文C'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'中文CN'</span>,<span class=\"hljs-number\">5</span>));",
                "isRoot": false,
                "uuid": "466fd567-9c1a-4a50-ae52-a9d205b4f604",
                "parentUUID": "29e51354-a4eb-422f-a303-7bfb55a95da3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#TextUtil._$ellipsisStrByLength()",
            "suites": [],
            "tests": [
              {
                "title": "正确截断字符串，如果超出字数限制，追加... ",
                "fullTitle": "TextUtil #TextUtil._$ellipsisStrByLength() 正确截断字符串，如果超出字数限制，追加... ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'中...'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'中文中文中文'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'Aa'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'Aa'</span>,<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'中文C...'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'中文CN'</span>, <span class=\"hljs-number\">5</span>));",
                "isRoot": false,
                "uuid": "3debe88a-9c93-49bf-83a6-b51a4a8262d9",
                "parentUUID": "07430bcf-5654-4c26-84cb-4bb24b81ee4d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\textUtil.test.js",
            "uuid": "07430bcf-5654-4c26-84cb-4bb24b81ee4d",
            "fullFile": "D:\\work\\edu-front-util\\test\\textUtil.test.js",
            "passes": [
              {
                "title": "正确截断字符串，如果超出字数限制，追加... ",
                "fullTitle": "TextUtil #TextUtil._$ellipsisStrByLength() 正确截断字符串，如果超出字数限制，追加... ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'中...'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'中文中文中文'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'Aa'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'Aa'</span>,<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'中文C...'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'中文CN'</span>, <span class=\"hljs-number\">5</span>));",
                "isRoot": false,
                "uuid": "3debe88a-9c93-49bf-83a6-b51a4a8262d9",
                "parentUUID": "07430bcf-5654-4c26-84cb-4bb24b81ee4d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\textUtil.test.js",
        "uuid": "0b08cbcb-8d29-4379-8d5e-6d44141db931",
        "fullFile": "D:\\work\\edu-front-util\\test\\textUtil.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "TimeUtil",
        "suites": [
          {
            "title": "#TimeUtil._$getCurServerTime() 获取服务器时间",
            "suites": [],
            "tests": [
              {
                "title": "正确显示服务器时间",
                "fullTitle": "TimeUtil #TimeUtil._$getCurServerTime() 获取服务器时间 正确显示服务器时间",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(+<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>, timeUtil._$getCurServerTime());",
                "isRoot": false,
                "uuid": "c809df02-efec-442d-ad9d-ab4474cd5eb5",
                "parentUUID": "4175bd1d-00ea-4c07-986d-2d81d07e4265",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\timeUtil.test.js",
            "uuid": "4175bd1d-00ea-4c07-986d-2d81d07e4265",
            "fullFile": "D:\\work\\edu-front-util\\test\\timeUtil.test.js",
            "passes": [
              {
                "title": "正确显示服务器时间",
                "fullTitle": "TimeUtil #TimeUtil._$getCurServerTime() 获取服务器时间 正确显示服务器时间",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(+<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>, timeUtil._$getCurServerTime());",
                "isRoot": false,
                "uuid": "c809df02-efec-442d-ad9d-ab4474cd5eb5",
                "parentUUID": "4175bd1d-00ea-4c07-986d-2d81d07e4265",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#TimeUtil._$formatTime()",
            "suites": [],
            "tests": [
              {
                "title": "正确格式化时间 2016-01-06",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2016-01-06",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016-01-06'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>));",
                "isRoot": false,
                "uuid": "7210d6a3-106e-42af-ba20-3d87d4c0518c",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 2016-01-06 22:02:25",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2016-01-06 22:02:25",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016-01-06 22:02:25'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd HH:mm:ss'</span>));",
                "isRoot": false,
                "uuid": "f8b46a7f-f1c0-4f4f-8231-d40e27cd7c87",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 2016年01月06日",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2016年01月06日",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016年01月06日'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>));",
                "isRoot": false,
                "uuid": "ff0182a4-ae2f-4e5a-a589-804f8acaeb74",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 2016-1-6",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2016-1-6",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016-1-6'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-M-d'</span>));",
                "isRoot": false,
                "uuid": "6ac54b0b-83a7-4725-9eeb-8a7f6cf767e9",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 2014-11-26",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2014-11-26",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2014-11-26'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-string\">'yyyy-M-d'</span>));",
                "isRoot": false,
                "uuid": "83e3d021-1c27-4ce4-ba27-5fdd2cc27d15",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 new Date().getTime",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 new Date().getTime",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016-5-6'</span>, timeUtil._$formatTime(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>().getTime(), <span class=\"hljs-string\">'yyyy-M-d'</span>));",
                "isRoot": false,
                "uuid": "55ad5fd1-1b25-4dab-8ee7-54b69558de14",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\timeUtil.test.js",
            "uuid": "6568e2c5-c3f9-4425-8714-2a2994681e90",
            "fullFile": "D:\\work\\edu-front-util\\test\\timeUtil.test.js",
            "passes": [
              {
                "title": "正确格式化时间 2016-01-06",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2016-01-06",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016-01-06'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>));",
                "isRoot": false,
                "uuid": "7210d6a3-106e-42af-ba20-3d87d4c0518c",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 2016-01-06 22:02:25",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2016-01-06 22:02:25",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016-01-06 22:02:25'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd HH:mm:ss'</span>));",
                "isRoot": false,
                "uuid": "f8b46a7f-f1c0-4f4f-8231-d40e27cd7c87",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 2016年01月06日",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2016年01月06日",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016年01月06日'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>));",
                "isRoot": false,
                "uuid": "ff0182a4-ae2f-4e5a-a589-804f8acaeb74",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 2016-1-6",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2016-1-6",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016-1-6'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-M-d'</span>));",
                "isRoot": false,
                "uuid": "6ac54b0b-83a7-4725-9eeb-8a7f6cf767e9",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 2014-11-26",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 2014-11-26",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2014-11-26'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-string\">'yyyy-M-d'</span>));",
                "isRoot": false,
                "uuid": "83e3d021-1c27-4ce4-ba27-5fdd2cc27d15",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              },
              {
                "title": "正确格式化时间 new Date().getTime",
                "fullTitle": "TimeUtil #TimeUtil._$formatTime() 正确格式化时间 new Date().getTime",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2016-5-6'</span>, timeUtil._$formatTime(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>().getTime(), <span class=\"hljs-string\">'yyyy-M-d'</span>));",
                "isRoot": false,
                "uuid": "55ad5fd1-1b25-4dab-8ee7-54b69558de14",
                "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 6,
            "totalPasses": 6,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#TimeUtil._$formatPeriod()",
            "suites": [],
            "tests": [
              {
                "title": "正确格式化时间段",
                "fullTitle": "TimeUtil #TimeUtil._$formatPeriod() 正确格式化时间段",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2014-11-26 - 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>));<br>assert.equal(<span class=\"hljs-string\">'2014-11-26 - 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>));<br>assert.equal(<span class=\"hljs-string\">'2014-11-26 至 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>, <span class=\"hljs-string\">' 至 '</span>));<br>assert.equal(<span class=\"hljs-string\">'2014年11月26日 至 2016年01月06日'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>, <span class=\"hljs-string\">' 至 '</span>));<br>assert.equal(<span class=\"hljs-string\">'待定'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">32503651201000</span>, <span class=\"hljs-number\">32535187201000</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>, <span class=\"hljs-string\">' 至 '</span>));",
                "isRoot": false,
                "uuid": "f5906f02-b220-47db-8ab0-2b4c3a4532be",
                "parentUUID": "fc840d27-dfde-4c38-805e-88d766967200",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\timeUtil.test.js",
            "uuid": "fc840d27-dfde-4c38-805e-88d766967200",
            "fullFile": "D:\\work\\edu-front-util\\test\\timeUtil.test.js",
            "passes": [
              {
                "title": "正确格式化时间段",
                "fullTitle": "TimeUtil #TimeUtil._$formatPeriod() 正确格式化时间段",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'2014-11-26 - 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>));<br>assert.equal(<span class=\"hljs-string\">'2014-11-26 - 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>));<br>assert.equal(<span class=\"hljs-string\">'2014-11-26 至 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>, <span class=\"hljs-string\">' 至 '</span>));<br>assert.equal(<span class=\"hljs-string\">'2014年11月26日 至 2016年01月06日'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>, <span class=\"hljs-string\">' 至 '</span>));<br>assert.equal(<span class=\"hljs-string\">'待定'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">32503651201000</span>, <span class=\"hljs-number\">32535187201000</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>, <span class=\"hljs-string\">' 至 '</span>));",
                "isRoot": false,
                "uuid": "f5906f02-b220-47db-8ab0-2b4c3a4532be",
                "parentUUID": "fc840d27-dfde-4c38-805e-88d766967200",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#TimeUtil._$formatTiktokTime()",
            "suites": [],
            "tests": [
              {
                "title": "正确格式化倒计时时间",
                "fullTitle": "TimeUtil #TimeUtil._$formatTiktokTime() 正确格式化倒计时时间",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'58天18小时16分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1422088945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'2小时46分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417021945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'16分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417012945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'10秒钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417011955458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-literal\">null</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">141011945458</span>, <span class=\"hljs-number\">1417011945458</span>));",
                "isRoot": false,
                "uuid": "8dae912e-a696-46a1-b11b-8f512e6cba18",
                "parentUUID": "8daf6b32-d845-4459-ab9b-0f8c47cf977a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\timeUtil.test.js",
            "uuid": "8daf6b32-d845-4459-ab9b-0f8c47cf977a",
            "fullFile": "D:\\work\\edu-front-util\\test\\timeUtil.test.js",
            "passes": [
              {
                "title": "正确格式化倒计时时间",
                "fullTitle": "TimeUtil #TimeUtil._$formatTiktokTime() 正确格式化倒计时时间",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'58天18小时16分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1422088945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'2小时46分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417021945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'16分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417012945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'10秒钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417011955458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-literal\">null</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">141011945458</span>, <span class=\"hljs-number\">1417011945458</span>));",
                "isRoot": false,
                "uuid": "8dae912e-a696-46a1-b11b-8f512e6cba18",
                "parentUUID": "8daf6b32-d845-4459-ab9b-0f8c47cf977a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\timeUtil.test.js",
        "uuid": "959a1a9d-ef08-4219-9450-3f870645fac5",
        "fullFile": "D:\\work\\edu-front-util\\test\\timeUtil.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "urlUtil",
        "suites": [
          {
            "title": "#urlUtil._$isRightUMI() ",
            "suites": [],
            "tests": [
              {
                "title": "比较UMI是否正确",
                "fullTitle": "urlUtil #urlUtil._$isRightUMI()  比较UMI是否正确",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/ewewe?qweqeqwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/ewewe?qweqe112qwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"/terer/ewewe?qweqe112qwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/eweweq?qweqeqwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));",
                "isRoot": false,
                "uuid": "c2d795a9-b816-4994-ab4e-0e27ebea7d36",
                "parentUUID": "535f75f4-8d7f-4da0-b711-a14dbdc97f0a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\urlUtil.test.js",
            "uuid": "535f75f4-8d7f-4da0-b711-a14dbdc97f0a",
            "fullFile": "D:\\work\\edu-front-util\\test\\urlUtil.test.js",
            "passes": [
              {
                "title": "比较UMI是否正确",
                "fullTitle": "urlUtil #urlUtil._$isRightUMI()  比较UMI是否正确",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/ewewe?qweqeqwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/ewewe?qweqe112qwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"/terer/ewewe?qweqe112qwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/eweweq?qweqeqwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));",
                "isRoot": false,
                "uuid": "c2d795a9-b816-4994-ab4e-0e27ebea7d36",
                "parentUUID": "535f75f4-8d7f-4da0-b711-a14dbdc97f0a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\urlUtil.test.js",
        "uuid": "7828950f-abe6-4111-a426-aedbfc441ed5",
        "fullFile": "D:\\work\\edu-front-util\\test\\urlUtil.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "versionUtil",
        "suites": [
          {
            "title": "#versionUtil._$versionCompare() ",
            "suites": [],
            "tests": [
              {
                "title": "比较UMI是否正确",
                "fullTitle": "versionUtil #versionUtil._$versionCompare()  比较UMI是否正确",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.1.0\"</span>,<span class=\"hljs-string\">\"1.1.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.1\"</span>,<span class=\"hljs-string\">\"1.0.1\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.0.1\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.1.0\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"3.0.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"2.1.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"2.0.1\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));",
                "isRoot": false,
                "uuid": "a6921405-b8f1-40a2-ba6a-6e9d4730fd8d",
                "parentUUID": "33bbbcf7-275b-4c6f-87a1-1d3467d4bec3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "\\test\\versionUtil.test.js",
            "uuid": "33bbbcf7-275b-4c6f-87a1-1d3467d4bec3",
            "fullFile": "D:\\work\\edu-front-util\\test\\versionUtil.test.js",
            "passes": [
              {
                "title": "比较UMI是否正确",
                "fullTitle": "versionUtil #versionUtil._$versionCompare()  比较UMI是否正确",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.1.0\"</span>,<span class=\"hljs-string\">\"1.1.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.1\"</span>,<span class=\"hljs-string\">\"1.0.1\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.0.1\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.1.0\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"3.0.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"2.1.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"2.0.1\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));",
                "isRoot": false,
                "uuid": "a6921405-b8f1-40a2-ba6a-6e9d4730fd8d",
                "parentUUID": "33bbbcf7-275b-4c6f-87a1-1d3467d4bec3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\versionUtil.test.js",
        "uuid": "8d63cf09-4f5f-4ef1-b118-eaaf0ac2f374",
        "fullFile": "D:\\work\\edu-front-util\\test\\versionUtil.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "2535f669-a503-4c92-8433-3235687204e9",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "返回true，当数组包含给定的数值",
      "fullTitle": "#arrayUtil._$arrContains() 返回true，当数组包含给定的数值",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],-<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">false</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">true</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-string\">\"qq\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\" \"</span>],<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>],<span class=\"hljs-string\">\"\"</span>));",
      "isRoot": false,
      "uuid": "917bfd79-9870-47a4-8387-49dbbc395d98",
      "parentUUID": "d22b90b1-8922-4762-bce0-0ff6d000b769",
      "skipped": false
    },
    {
      "title": "返回false，当数组不包含给定的值",
      "fullTitle": "#arrayUtil._$arrContains() 返回false，当数组不包含给定的值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-string\">\"aa\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],-<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\"aa\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\"\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">true</span>));",
      "isRoot": false,
      "uuid": "7c15fce7-6421-44b3-b7b0-367719705444",
      "parentUUID": "d22b90b1-8922-4762-bce0-0ff6d000b769",
      "skipped": false
    },
    {
      "title": "返回true，当对象数组包含给定的数值",
      "fullTitle": "#arrayUtil._$arrContainsByKey() 返回true，当对象数组包含给定的数值",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">123</span>}],<span class=\"hljs-number\">123</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">0</span>}],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">1</span>}],-<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">0.1</span>}],-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">true</span>}],<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">false</span>}],<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\" \"</span>}],<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"\"</span>}],<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"12q\"</span>}],<span class=\"hljs-string\">\"12q\"</span>,<span class=\"hljs-string\">\"name\"</span>));",
      "isRoot": false,
      "uuid": "850f142d-ad34-4954-b368-7f8d79f17e7a",
      "parentUUID": "d311d886-75c6-4e08-8e3a-22c688d87ed7",
      "skipped": false
    },
    {
      "title": "返回false，当对象数组不包含给定的数值",
      "fullTitle": "#arrayUtil._$arrContainsByKey() 返回false，当对象数组不包含给定的数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">123</span>}],<span class=\"hljs-number\">123</span>,<span class=\"hljs-string\">\"123\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">0</span>}],<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">1</span>}],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">0.1</span>}],-<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">true</span>}],<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"true\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">false</span>}],<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"false\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\" \"</span>}],<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"\"</span>}],<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"12q\"</span>}],<span class=\"hljs-string\">\"name\"</span>,<span class=\"hljs-string\">\"12q\"</span>));",
      "isRoot": false,
      "uuid": "596c15bc-8971-4002-8b0a-1047801ddebc",
      "parentUUID": "d311d886-75c6-4e08-8e3a-22c688d87ed7",
      "skipped": false
    },
    {
      "title": "返回true，当数组A包含数组B中的数值",
      "fullTitle": "#arrayUtil._$arrCross() 返回true，当数组A包含数组B中的数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">0</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,-<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">4</span>,-<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-literal\">true</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">\"\"</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">\" \"</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">1</span>,<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[-<span class=\"hljs-number\">1</span>,<span class=\"hljs-literal\">null</span>]));",
      "isRoot": false,
      "uuid": "0b364d18-280d-4058-9ff7-f38499ab6cab",
      "parentUUID": "28d7879d-6e30-4305-b360-bdb60db49624",
      "skipped": false
    },
    {
      "title": "返回false，当数组A不包含数组B中的数值",
      "fullTitle": "#arrayUtil._$arrCross() 返回false，当数组A不包含数组B中的数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">2</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">0</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[-<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,-<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-literal\">true</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-string\">\"\"</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-string\">\" \"</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>],[<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>],[<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-literal\">null</span>]));",
      "isRoot": false,
      "uuid": "44072a69-ab5e-49eb-bd09-4a0a34e0ab62",
      "parentUUID": "28d7879d-6e30-4305-b360-bdb60db49624",
      "skipped": false
    },
    {
      "title": "正确显示价格信息",
      "fullTitle": "#cashUtil._$formatCash() 正确显示价格信息",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'￥3.00'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.10'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.1</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.01'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.01</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.00'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.001</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash());<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">0.00</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-literal\">null</span>));",
      "isRoot": false,
      "uuid": "192df5bf-0f3f-4a29-bfcc-464bb47b2116",
      "parentUUID": "7ce46f89-7270-46a4-9a44-754d3f1eb356",
      "skipped": false
    },
    {
      "title": "正确显示不带有¥的价格信息",
      "fullTitle": "#cashUtil._$formatCashNoRMB() 正确显示不带有¥的价格信息",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'3.00'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'3.10'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.1</span>));<br>assert.equal(<span class=\"hljs-string\">'3.01'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.01</span>));<br>assert.equal(<span class=\"hljs-string\">'3.00'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.001</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB());<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">0.00</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-literal\">null</span>));",
      "isRoot": false,
      "uuid": "9877dbda-f016-4eca-842b-a5bccab8e401",
      "parentUUID": "958041cc-e216-4afe-82e4-bab325c9afed",
      "skipped": false
    },
    {
      "title": "正确格式化数值",
      "fullTitle": "#cashUtil._$formatNumber() 正确格式化数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-number\">0.20</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">0.2</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.10</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">3.101</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.02</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">3.016</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.29</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"3.287\"</span>,<span class=\"hljs-number\">2</span>));",
      "isRoot": false,
      "uuid": "e5f443ee-348c-4430-9df9-b8fab8e5f192",
      "parentUUID": "172e96f7-ed37-4a23-9158-6e317bd222c6",
      "skipped": false
    },
    {
      "title": "非数值类型，2位精度返回0.00",
      "fullTitle": "#cashUtil._$formatNumber() 非数值类型，2位精度返回0.00",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"0.qw\"</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-number\">2</span>));",
      "isRoot": false,
      "uuid": "22900b10-f94f-4679-a27e-0a1954f289b9",
      "parentUUID": "172e96f7-ed37-4a23-9158-6e317bd222c6",
      "skipped": false
    },
    {
      "title": "正确显示压缩后的图片信息",
      "fullTitle": "#imageUtil._$scaleImage() 正确显示压缩后的图片信息",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'http://imgsize.ph.126.net/?enlarge=true&amp;imgurl=http://img1.ph.126.net/_4vld4yQzMkX7mlp-BFTVw==/4887250020728080384.jpg_450x250x1x95.jpg'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://img1.ph.126.net/_4vld4yQzMkX7mlp-BFTVw==/4887250020728080384.jpg'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));<br>assert.equal(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=450y250&amp;quality=100'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=225y142&amp;quality=100'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));<br>assert.equal(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=450y250&amp;quality=100'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));",
      "isRoot": false,
      "uuid": "0e1d08bf-bdbc-467b-9992-e022dd0f8e90",
      "parentUUID": "9e68568d-ecd7-4946-bc13-4b076a4f8788",
      "skipped": false
    },
    {
      "title": "超出10000显示xx.x万,否则输出数值",
      "fullTitle": "#numUtil._$num10000() 超出10000显示xx.x万,否则输出数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">\"4.1万\"</span>, numUtil._$num10000(<span class=\"hljs-number\">41023</span>));<br>assert.equal(<span class=\"hljs-string\">\"4.2万\"</span>, numUtil._$num10000(<span class=\"hljs-number\">41523</span>));<br>assert.equal(<span class=\"hljs-string\">\"4000\"</span>, numUtil._$num10000(<span class=\"hljs-number\">4000</span>));",
      "isRoot": false,
      "uuid": "a9aece06-fcf9-4a82-810b-5c9f645facf9",
      "parentUUID": "aa2412a3-e623-4c82-aae5-2610e1d43643",
      "skipped": false
    },
    {
      "title": "格式化文件大小，B、KB、MB、GB、TB、PB、EB、ZB、YB",
      "fullTitle": "#numUtil._$formatFileSize() 格式化文件大小，B、KB、MB、GB、TB、PB、EB、ZB、YB",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">\"0 B\"</span>,   numUtil._$formatFileSize(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">\"100 B\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">100</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 KB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">10240</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 MB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 GB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 TB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 PB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 EB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 ZB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 YB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));",
      "isRoot": false,
      "uuid": "c29eb4d0-4d3a-4419-8d88-87f89bf3a29c",
      "parentUUID": "e65f4545-8eef-4708-94ef-b71ad622b34b",
      "skipped": false
    },
    {
      "title": "正确判断字符串是邮箱",
      "fullTitle": "#regUtil._$isEmail() 正确判断字符串是邮箱",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'hzshaoyy@corp.netease.com'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.com'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'807991555@qq.com'</span>));",
      "isRoot": false,
      "uuid": "0f4c0012-95c2-4685-99fb-8954e5659f4c",
      "parentUUID": "60f6a0c5-4f17-42e7-a0df-86f0315ff636",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是邮箱",
      "fullTitle": "#regUtil._$isEmail() 正确判断字符串不是邮箱",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'hzshaoyy@corp.'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.c'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'1asd@'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'dadwasadzcs'</span>));",
      "isRoot": false,
      "uuid": "277a6fd0-1aa2-487d-95e0-27a8ec8c2162",
      "parentUUID": "60f6a0c5-4f17-42e7-a0df-86f0315ff636",
      "skipped": false
    },
    {
      "title": "正确判断字符串是手机号码",
      "fullTitle": "#regUtil._$isPhone() 正确判断字符串是手机号码",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13732215280'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13332215285'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'17757783669'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'15138712518'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13423456789'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'18023123456'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'+8618023123456'</span>));",
      "isRoot": false,
      "uuid": "4147a499-0151-4682-b5a3-5c65e8f5ded4",
      "parentUUID": "1d56548c-120a-49f4-9a5a-1cc35ce723b1",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是手机号码",
      "fullTitle": "#regUtil._$isPhone() 正确判断字符串不是手机号码",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'1373221528'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'1373221528a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'137322152801'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'dadwasadzcs'</span>));",
      "isRoot": false,
      "uuid": "5efb6737-672c-4e69-ba00-5d8e8c7e9e56",
      "parentUUID": "1d56548c-120a-49f4-9a5a-1cc35ce723b1",
      "skipped": false
    },
    {
      "title": "正确判断字符串是电话号码",
      "fullTitle": "#regUtil._$isTel() 正确判断字符串是电话号码",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-4405222'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-4405222-1234'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822-1234'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'4405222'</span>));",
      "isRoot": false,
      "uuid": "ec54904c-e5a0-4b0d-a602-a6094a5b7e32",
      "parentUUID": "5f3c64d2-6dfe-429d-ae50-a66ce8790b35",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是电话号码",
      "fullTitle": "#regUtil._$isTel() 正确判断字符串不是电话号码",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511a-4405222'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822-1234a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-440522a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'4405222a'</span>));",
      "isRoot": false,
      "uuid": "f0899d99-6b71-4542-8671-a7825fa3d586",
      "parentUUID": "5f3c64d2-6dfe-429d-ae50-a66ce8790b35",
      "skipped": false
    },
    {
      "title": "正确判断字符串是正整数",
      "fullTitle": "#regUtil._$isPositiveNum() 正确判断字符串是正整数",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">11110</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1111111111111110</span>));",
      "isRoot": false,
      "uuid": "b0ec6b4c-97ce-4f5e-9a73-fe12009da469",
      "parentUUID": "504ed483-dbff-4c20-82f8-3b87964a2013",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是正整数",
      "fullTitle": "#regUtil._$isPositiveNum() 正确判断字符串不是正整数",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">0.2</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">1.5</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1.3</span>));",
      "isRoot": false,
      "uuid": "7702a8f7-ba71-4250-a681-8885a3c56205",
      "parentUUID": "504ed483-dbff-4c20-82f8-3b87964a2013",
      "skipped": false
    },
    {
      "title": "正确判断字符串是QQ号码(4-11位数字)",
      "fullTitle": "#regUtil._$isQQ() 正确判断字符串是QQ号码(4-11位数字)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'147066110'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'14706'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1470'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'3470'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'14706123'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1470612311'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'9470612311'</span>));",
      "isRoot": false,
      "uuid": "2d354772-ccdf-4f00-ac68-617e8d8e86a5",
      "parentUUID": "1f625b20-fb7a-42a0-9432-f345d4987a3b",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是QQ号码(4-11位数字)",
      "fullTitle": "#regUtil._$isQQ() 正确判断字符串不是QQ号码(4-11位数字)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'147'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1qweqwe'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1q2324244'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1111112324244'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'0111112'</span>));",
      "isRoot": false,
      "uuid": "2188ca79-c4bb-438e-84fd-d5d8f538ecf2",
      "parentUUID": "1f625b20-fb7a-42a0-9432-f345d4987a3b",
      "skipped": false
    },
    {
      "title": "移除tab 回車 換行,多于的空格变成一个空格",
      "fullTitle": "#TextUtil._$removeNRNBSP() 移除tab 回車 換行,多于的空格变成一个空格",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">\"q1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q1'</span>));<br>assert.equal(<span class=\"hljs-string\">\" q1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">' q1'</span>));<br>assert.equal(<span class=\"hljs-string\">\" q 1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">' q '</span> +<br>    <span class=\"hljs-string\">' 1'</span>));<br>assert.equal(<span class=\"hljs-string\">\"q 1 \"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q  1 '</span>));<br>assert.equal(<span class=\"hljs-string\">\"q 1 \"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q  1  '</span>));",
      "isRoot": false,
      "uuid": "039e2527-895c-4979-85f8-41d521425358",
      "parentUUID": "fb472200-bd3d-41b7-8688-3243635f375a",
      "skipped": false
    },
    {
      "title": "正确获取字符串长度",
      "fullTitle": "#TextUtil._$getStringLength() 正确获取字符串长度",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-number\">1</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'1'</span>));<br>assert.equal(<span class=\"hljs-number\">2</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'Aa'</span>));<br>assert.equal(<span class=\"hljs-number\">4</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'中文'</span>));<br>assert.equal(<span class=\"hljs-number\">6</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'中文CN'</span>));",
      "isRoot": false,
      "uuid": "a139e369-b974-436e-9201-8b5ba6872a79",
      "parentUUID": "f650a519-d6b7-43a9-af0c-6d40cf39c420",
      "skipped": false
    },
    {
      "title": "正确截断字符串，处理中英文情况",
      "fullTitle": "#TextUtil._$sliceStrByLength() 正确截断字符串，处理中英文情况",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'qaz'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'qazwsxedc'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'中'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'中文中文中文'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'qazw'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'qazw中文'</span>,<span class=\"hljs-number\">5</span>));<br>assert.equal(<span class=\"hljs-string\">'中文C'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'中文CN'</span>,<span class=\"hljs-number\">5</span>));",
      "isRoot": false,
      "uuid": "d67a75c9-230b-48c0-9085-ddd78fff324b",
      "parentUUID": "29e51354-a4eb-422f-a303-7bfb55a95da3",
      "skipped": false
    },
    {
      "title": "正确截断字符串，如果超出字数限制，追加... ",
      "fullTitle": "#TextUtil._$ellipsisStrByLength() 正确截断字符串，如果超出字数限制，追加... ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'中...'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'中文中文中文'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'Aa'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'Aa'</span>,<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'中文C...'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'中文CN'</span>, <span class=\"hljs-number\">5</span>));",
      "isRoot": false,
      "uuid": "d94476af-5f66-4f99-86e4-a3798044590b",
      "parentUUID": "07430bcf-5654-4c26-84cb-4bb24b81ee4d",
      "skipped": false
    },
    {
      "title": "正确显示服务器时间",
      "fullTitle": "#TimeUtil._$getCurServerTime() 获取服务器时间 正确显示服务器时间",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(+<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>, timeUtil._$getCurServerTime());",
      "isRoot": false,
      "uuid": "c427bee8-6fe3-4135-aa1b-593cc2721189",
      "parentUUID": "4175bd1d-00ea-4c07-986d-2d81d07e4265",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2016-01-06",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2016-01-06",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016-01-06'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>));",
      "isRoot": false,
      "uuid": "38e86900-650c-46b7-88e1-3156c83debfb",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2016-01-06 22:02:25",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2016-01-06 22:02:25",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016-01-06 22:02:25'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd HH:mm:ss'</span>));",
      "isRoot": false,
      "uuid": "c26d4c76-c874-4b87-93ff-21506c97e487",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2016年01月06日",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2016年01月06日",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016年01月06日'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>));",
      "isRoot": false,
      "uuid": "6ce54e12-ea4b-43aa-8faa-effc70f54fe8",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2016-1-6",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2016-1-6",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016-1-6'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-M-d'</span>));",
      "isRoot": false,
      "uuid": "bc81bb0c-7ea2-416c-83e5-a4151abcab30",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2014-11-26",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2014-11-26",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2014-11-26'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-string\">'yyyy-M-d'</span>));",
      "isRoot": false,
      "uuid": "50d53425-876b-40d6-8276-87f6e15ab239",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 new Date().getTime",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 new Date().getTime",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016-5-6'</span>, timeUtil._$formatTime(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>().getTime(), <span class=\"hljs-string\">'yyyy-M-d'</span>));",
      "isRoot": false,
      "uuid": "1f64def9-e054-41dd-8f0a-86cb7de349a0",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间段",
      "fullTitle": "#TimeUtil._$formatPeriod() 正确格式化时间段",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2014-11-26 - 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>));<br>assert.equal(<span class=\"hljs-string\">'2014-11-26 - 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>));<br>assert.equal(<span class=\"hljs-string\">'2014-11-26 至 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>, <span class=\"hljs-string\">' 至 '</span>));<br>assert.equal(<span class=\"hljs-string\">'2014年11月26日 至 2016年01月06日'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>, <span class=\"hljs-string\">' 至 '</span>));<br>assert.equal(<span class=\"hljs-string\">'待定'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">32503651201000</span>, <span class=\"hljs-number\">32535187201000</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>, <span class=\"hljs-string\">' 至 '</span>));",
      "isRoot": false,
      "uuid": "4c42bb4d-080b-4de3-ace3-bb0072427d25",
      "parentUUID": "fc840d27-dfde-4c38-805e-88d766967200",
      "skipped": false
    },
    {
      "title": "正确格式化倒计时时间",
      "fullTitle": "#TimeUtil._$formatTiktokTime() 正确格式化倒计时时间",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'58天18小时16分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1422088945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'2小时46分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417021945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'16分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417012945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'10秒钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417011955458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-literal\">null</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">141011945458</span>, <span class=\"hljs-number\">1417011945458</span>));",
      "isRoot": false,
      "uuid": "b1142ea3-053a-4165-9254-a998b9ea685f",
      "parentUUID": "8daf6b32-d845-4459-ab9b-0f8c47cf977a",
      "skipped": false
    },
    {
      "title": "比较UMI是否正确",
      "fullTitle": "#urlUtil._$isRightUMI()  比较UMI是否正确",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/ewewe?qweqeqwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/ewewe?qweqe112qwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"/terer/ewewe?qweqe112qwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/eweweq?qweqeqwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));",
      "isRoot": false,
      "uuid": "215807bd-30e5-415c-8e30-8b5609b53820",
      "parentUUID": "535f75f4-8d7f-4da0-b711-a14dbdc97f0a",
      "skipped": false
    },
    {
      "title": "比较UMI是否正确",
      "fullTitle": "#versionUtil._$versionCompare()  比较UMI是否正确",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.1.0\"</span>,<span class=\"hljs-string\">\"1.1.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.1\"</span>,<span class=\"hljs-string\">\"1.0.1\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.0.1\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.1.0\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"3.0.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"2.1.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"2.0.1\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));",
      "isRoot": false,
      "uuid": "5cae658a-759f-4bd7-86ac-f15c4acec98a",
      "parentUUID": "33bbbcf7-275b-4c6f-87a1-1d3467d4bec3",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "返回true，当数组包含给定的数值",
      "fullTitle": "#arrayUtil._$arrContains() 返回true，当数组包含给定的数值",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>],-<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">false</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">true</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-string\">\"qq\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\" \"</span>],<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>],<span class=\"hljs-string\">\"\"</span>));",
      "isRoot": false,
      "uuid": "76445790-d278-4192-94c6-a7c784e1a99b",
      "parentUUID": "d22b90b1-8922-4762-bce0-0ff6d000b769",
      "skipped": false
    },
    {
      "title": "返回false，当数组不包含给定的值",
      "fullTitle": "#arrayUtil._$arrContains() 返回false，当数组不包含给定的值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-string\">\"aa\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"qq\"</span>],-<span class=\"hljs-number\">0.1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\"aa\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">3</span>],<span class=\"hljs-string\">\"\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContains([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"qq\"</span>],<span class=\"hljs-literal\">true</span>));",
      "isRoot": false,
      "uuid": "33fa3dab-c706-4530-be1b-c9da896f7186",
      "parentUUID": "d22b90b1-8922-4762-bce0-0ff6d000b769",
      "skipped": false
    },
    {
      "title": "返回true，当对象数组包含给定的数值",
      "fullTitle": "#arrayUtil._$arrContainsByKey() 返回true，当对象数组包含给定的数值",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">123</span>}],<span class=\"hljs-number\">123</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">0</span>}],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">1</span>}],-<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">0.1</span>}],-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">true</span>}],<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">false</span>}],<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\" \"</span>}],<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"\"</span>}],<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"12q\"</span>}],<span class=\"hljs-string\">\"12q\"</span>,<span class=\"hljs-string\">\"name\"</span>));",
      "isRoot": false,
      "uuid": "54fa8185-4b17-431e-97ab-ed43856fb926",
      "parentUUID": "d311d886-75c6-4e08-8e3a-22c688d87ed7",
      "skipped": false
    },
    {
      "title": "返回false，当对象数组不包含给定的数值",
      "fullTitle": "#arrayUtil._$arrContainsByKey() 返回false，当对象数组不包含给定的数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">123</span>}],<span class=\"hljs-number\">123</span>,<span class=\"hljs-string\">\"123\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-number\">0</span>}],<span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">1</span>}],<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:-<span class=\"hljs-number\">0.1</span>}],-<span class=\"hljs-number\">0</span>,<span class=\"hljs-string\">\"name\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">true</span>}],<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"true\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-literal\">false</span>}],<span class=\"hljs-literal\">false</span>,<span class=\"hljs-string\">\"false\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\" \"</span>}],<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-string\">\" \"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"\"</span>}],<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrContainsByKey([{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"12q\"</span>}],<span class=\"hljs-string\">\"name\"</span>,<span class=\"hljs-string\">\"12q\"</span>));",
      "isRoot": false,
      "uuid": "2c741bd3-d6b9-4e4c-8bc3-f768ed2e00f9",
      "parentUUID": "d311d886-75c6-4e08-8e3a-22c688d87ed7",
      "skipped": false
    },
    {
      "title": "返回true，当数组A包含数组B中的数值",
      "fullTitle": "#arrayUtil._$arrCross() 返回true，当数组A包含数组B中的数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">0</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,-<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">4</span>,-<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-literal\">true</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">\"\"</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-string\">\" \"</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">6</span>,<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">1</span>,<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">true</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[-<span class=\"hljs-number\">1</span>,<span class=\"hljs-literal\">null</span>]));",
      "isRoot": false,
      "uuid": "95bd59c2-e5b2-4294-b935-afafb0daa52e",
      "parentUUID": "28d7879d-6e30-4305-b360-bdb60db49624",
      "skipped": false
    },
    {
      "title": "返回false，当数组A不包含数组B中的数值",
      "fullTitle": "#arrayUtil._$arrCross() 返回false，当数组A不包含数组B中的数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">2</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">0</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[-<span class=\"hljs-number\">1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-number\">3</span>,-<span class=\"hljs-number\">0.1</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-literal\">true</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-string\">\"\"</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-string\">\" \"</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>],[<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>],[<span class=\"hljs-literal\">false</span>]));<br>assert.equal(<span class=\"hljs-literal\">false</span>, arrayUtil._$arrCross([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.1</span>,-<span class=\"hljs-number\">0.1</span>,<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-literal\">false</span>],[<span class=\"hljs-literal\">null</span>]));",
      "isRoot": false,
      "uuid": "5a287f83-b4ba-4fc4-aaa4-14b117c6bbce",
      "parentUUID": "28d7879d-6e30-4305-b360-bdb60db49624",
      "skipped": false
    },
    {
      "title": "正确显示价格信息",
      "fullTitle": "#cashUtil._$formatCash() 正确显示价格信息",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'￥3.00'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.10'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.1</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.01'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.01</span>));<br>assert.equal(<span class=\"hljs-string\">'￥3.00'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">3.001</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash());<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-number\">0.00</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCash(<span class=\"hljs-literal\">null</span>));",
      "isRoot": false,
      "uuid": "072ff3b3-2767-46c3-8f38-6b4403409656",
      "parentUUID": "7ce46f89-7270-46a4-9a44-754d3f1eb356",
      "skipped": false
    },
    {
      "title": "正确显示不带有¥的价格信息",
      "fullTitle": "#cashUtil._$formatCashNoRMB() 正确显示不带有¥的价格信息",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'3.00'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'3.10'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.1</span>));<br>assert.equal(<span class=\"hljs-string\">'3.01'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.01</span>));<br>assert.equal(<span class=\"hljs-string\">'3.00'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">3.001</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB());<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-number\">0.00</span>));<br>assert.equal(<span class=\"hljs-string\">'免费'</span>, cashUtil._$formatCashNoRMB(<span class=\"hljs-literal\">null</span>));",
      "isRoot": false,
      "uuid": "e92c172f-5b36-49f4-8cfc-2e904338288d",
      "parentUUID": "958041cc-e216-4afe-82e4-bab325c9afed",
      "skipped": false
    },
    {
      "title": "正确格式化数值",
      "fullTitle": "#cashUtil._$formatNumber() 正确格式化数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-number\">0.20</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">0.2</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.10</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">3.101</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.02</span>, cashUtil._$formatNumber(<span class=\"hljs-number\">3.016</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">3.29</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"3.287\"</span>,<span class=\"hljs-number\">2</span>));",
      "isRoot": false,
      "uuid": "c6ef39a5-b72f-41ac-aff9-7b4b8d8d844d",
      "parentUUID": "172e96f7-ed37-4a23-9158-6e317bd222c6",
      "skipped": false
    },
    {
      "title": "非数值类型，2位精度返回0.00",
      "fullTitle": "#cashUtil._$formatNumber() 非数值类型，2位精度返回0.00",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"0.qw\"</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-number\">2</span>));<br>assert.equal(<span class=\"hljs-number\">0.00</span>, cashUtil._$formatNumber(<span class=\"hljs-string\">\" \"</span>,<span class=\"hljs-number\">2</span>));",
      "isRoot": false,
      "uuid": "24e2a5c2-fab7-406b-b916-804fab998fd9",
      "parentUUID": "172e96f7-ed37-4a23-9158-6e317bd222c6",
      "skipped": false
    },
    {
      "title": "正确显示压缩后的图片信息",
      "fullTitle": "#imageUtil._$scaleImage() 正确显示压缩后的图片信息",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'http://imgsize.ph.126.net/?enlarge=true&amp;imgurl=http://img1.ph.126.net/_4vld4yQzMkX7mlp-BFTVw==/4887250020728080384.jpg_450x250x1x95.jpg'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://img1.ph.126.net/_4vld4yQzMkX7mlp-BFTVw==/4887250020728080384.jpg'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));<br>assert.equal(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=450y250&amp;quality=100'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=225y142&amp;quality=100'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));<br>assert.equal(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg?imageView&amp;thumbnail=450y250&amp;quality=100'</span>, imageUtil._$scaleImage(<span class=\"hljs-string\">'http://nos.netease.com/edu-image/AE32703A6908FBD2A57F917F5E93A55D.jpg'</span>, <span class=\"hljs-number\">450</span>, <span class=\"hljs-number\">250</span>));",
      "isRoot": false,
      "uuid": "059413a4-7904-4384-9de3-60217307d162",
      "parentUUID": "9e68568d-ecd7-4946-bc13-4b076a4f8788",
      "skipped": false
    },
    {
      "title": "超出10000显示xx.x万,否则输出数值",
      "fullTitle": "#numUtil._$num10000() 超出10000显示xx.x万,否则输出数值",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">\"4.1万\"</span>, numUtil._$num10000(<span class=\"hljs-number\">41023</span>));<br>assert.equal(<span class=\"hljs-string\">\"4.2万\"</span>, numUtil._$num10000(<span class=\"hljs-number\">41523</span>));<br>assert.equal(<span class=\"hljs-string\">\"4000\"</span>, numUtil._$num10000(<span class=\"hljs-number\">4000</span>));",
      "isRoot": false,
      "uuid": "c334f3e7-23ab-4385-a616-658982dc886a",
      "parentUUID": "aa2412a3-e623-4c82-aae5-2610e1d43643",
      "skipped": false
    },
    {
      "title": "格式化文件大小，B、KB、MB、GB、TB、PB、EB、ZB、YB",
      "fullTitle": "#numUtil._$formatFileSize() 格式化文件大小，B、KB、MB、GB、TB、PB、EB、ZB、YB",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">\"0 B\"</span>,   numUtil._$formatFileSize(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-string\">\"100 B\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">100</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 KB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">10240</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 MB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 GB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 TB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 PB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 EB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 ZB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));<br>assert.equal(<span class=\"hljs-string\">\"10.0 YB\"</span>, numUtil._$formatFileSize(<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">1024</span>*<span class=\"hljs-number\">10</span>));",
      "isRoot": false,
      "uuid": "c2dde3b4-2e1b-411e-91d3-4c3e3c901573",
      "parentUUID": "e65f4545-8eef-4708-94ef-b71ad622b34b",
      "skipped": false
    },
    {
      "title": "正确判断字符串是邮箱",
      "fullTitle": "#regUtil._$isEmail() 正确判断字符串是邮箱",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'hzshaoyy@corp.netease.com'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.com'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isEmail(<span class=\"hljs-string\">'807991555@qq.com'</span>));",
      "isRoot": false,
      "uuid": "4250cad8-739d-4912-bc7d-d7754555fbf7",
      "parentUUID": "60f6a0c5-4f17-42e7-a0df-86f0315ff636",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是邮箱",
      "fullTitle": "#regUtil._$isEmail() 正确判断字符串不是邮箱",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'hzshaoyy@corp.'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.c'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'111@163.'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'1asd@'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isEmail(<span class=\"hljs-string\">'dadwasadzcs'</span>));",
      "isRoot": false,
      "uuid": "d6705a18-2da7-4ee7-a944-8f5f62e9cbb7",
      "parentUUID": "60f6a0c5-4f17-42e7-a0df-86f0315ff636",
      "skipped": false
    },
    {
      "title": "正确判断字符串是手机号码",
      "fullTitle": "#regUtil._$isPhone() 正确判断字符串是手机号码",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13732215280'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13332215285'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'17757783669'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'15138712518'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'13423456789'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'18023123456'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPhone(<span class=\"hljs-string\">'+8618023123456'</span>));",
      "isRoot": false,
      "uuid": "4bf6d7c4-8e85-4ca9-a725-c308baf6189b",
      "parentUUID": "1d56548c-120a-49f4-9a5a-1cc35ce723b1",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是手机号码",
      "fullTitle": "#regUtil._$isPhone() 正确判断字符串不是手机号码",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'1373221528'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'1373221528a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'137322152801'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPhone(<span class=\"hljs-string\">'dadwasadzcs'</span>));",
      "isRoot": false,
      "uuid": "d439506f-acf1-4372-969d-6e48daad6f5b",
      "parentUUID": "1d56548c-120a-49f4-9a5a-1cc35ce723b1",
      "skipped": false
    },
    {
      "title": "正确判断字符串是电话号码",
      "fullTitle": "#regUtil._$isTel() 正确判断字符串是电话号码",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-4405222'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-4405222-1234'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822-1234'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isTel(<span class=\"hljs-string\">'4405222'</span>));",
      "isRoot": false,
      "uuid": "4ec7092c-4c5a-4070-892d-7f4f38d17a2f",
      "parentUUID": "5f3c64d2-6dfe-429d-ae50-a66ce8790b35",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是电话号码",
      "fullTitle": "#regUtil._$isTel() 正确判断字符串不是电话号码",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511a-4405222'</span>)); <span class=\"hljs-comment\">//这个不是我的号码，不要打</span><br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'021-87888822-1234a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'0511-440522a'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isTel(<span class=\"hljs-string\">'4405222a'</span>));",
      "isRoot": false,
      "uuid": "fc8de213-849b-44da-ab0f-61f109f3547f",
      "parentUUID": "5f3c64d2-6dfe-429d-ae50-a66ce8790b35",
      "skipped": false
    },
    {
      "title": "正确判断字符串是正整数",
      "fullTitle": "#regUtil._$isPositiveNum() 正确判断字符串是正整数",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">11110</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1111111111111110</span>));",
      "isRoot": false,
      "uuid": "0d2fa5c4-0c90-4e36-970c-eb10bf4db367",
      "parentUUID": "504ed483-dbff-4c20-82f8-3b87964a2013",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是正整数",
      "fullTitle": "#regUtil._$isPositiveNum() 正确判断字符串不是正整数",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">0.2</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">1</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(-<span class=\"hljs-number\">1.5</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">0</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isPositiveNum(<span class=\"hljs-number\">1.3</span>));",
      "isRoot": false,
      "uuid": "62149b0b-e4fe-40fc-bb39-11c89ee85903",
      "parentUUID": "504ed483-dbff-4c20-82f8-3b87964a2013",
      "skipped": false
    },
    {
      "title": "正确判断字符串是QQ号码(4-11位数字)",
      "fullTitle": "#regUtil._$isQQ() 正确判断字符串是QQ号码(4-11位数字)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'147066110'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'14706'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1470'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'3470'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'14706123'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1470612311'</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, regUtil._$isQQ(<span class=\"hljs-string\">'9470612311'</span>));",
      "isRoot": false,
      "uuid": "60147585-453f-450b-bd62-b374c4aa974f",
      "parentUUID": "1f625b20-fb7a-42a0-9432-f345d4987a3b",
      "skipped": false
    },
    {
      "title": "正确判断字符串不是QQ号码(4-11位数字)",
      "fullTitle": "#regUtil._$isQQ() 正确判断字符串不是QQ号码(4-11位数字)",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'147'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1qweqwe'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1q2324244'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'1111112324244'</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, regUtil._$isQQ(<span class=\"hljs-string\">'0111112'</span>));",
      "isRoot": false,
      "uuid": "ab6834ad-0dbf-404c-9305-f9a09783867d",
      "parentUUID": "1f625b20-fb7a-42a0-9432-f345d4987a3b",
      "skipped": false
    },
    {
      "title": "移除tab 回車 換行,多于的空格变成一个空格",
      "fullTitle": "#TextUtil._$removeNRNBSP() 移除tab 回車 換行,多于的空格变成一个空格",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">\"q1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q1'</span>));<br>assert.equal(<span class=\"hljs-string\">\" q1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">' q1'</span>));<br>assert.equal(<span class=\"hljs-string\">\" q 1\"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">' q '</span> +<br>    <span class=\"hljs-string\">' 1'</span>));<br>assert.equal(<span class=\"hljs-string\">\"q 1 \"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q  1 '</span>));<br>assert.equal(<span class=\"hljs-string\">\"q 1 \"</span>, TextUtil._$removeNRNBSP(<span class=\"hljs-string\">'q  1  '</span>));",
      "isRoot": false,
      "uuid": "3f97363d-28be-4b08-bca6-4b6eaca5ed8f",
      "parentUUID": "fb472200-bd3d-41b7-8688-3243635f375a",
      "skipped": false
    },
    {
      "title": "正确获取字符串长度",
      "fullTitle": "#TextUtil._$getStringLength() 正确获取字符串长度",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-number\">1</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'1'</span>));<br>assert.equal(<span class=\"hljs-number\">2</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'Aa'</span>));<br>assert.equal(<span class=\"hljs-number\">4</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'中文'</span>));<br>assert.equal(<span class=\"hljs-number\">6</span>, TextUtil._$getStringLength(<span class=\"hljs-string\">'中文CN'</span>));",
      "isRoot": false,
      "uuid": "0d9590f4-bf53-40bf-99bc-418824929ecf",
      "parentUUID": "f650a519-d6b7-43a9-af0c-6d40cf39c420",
      "skipped": false
    },
    {
      "title": "正确截断字符串，处理中英文情况",
      "fullTitle": "#TextUtil._$sliceStrByLength() 正确截断字符串，处理中英文情况",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'qaz'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'qazwsxedc'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'中'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'中文中文中文'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'qazw'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'qazw中文'</span>,<span class=\"hljs-number\">5</span>));<br>assert.equal(<span class=\"hljs-string\">'中文C'</span>, TextUtil._$sliceStrByLength(<span class=\"hljs-string\">'中文CN'</span>,<span class=\"hljs-number\">5</span>));",
      "isRoot": false,
      "uuid": "036e49db-6725-4169-9b4d-5eebdfb4d2a0",
      "parentUUID": "29e51354-a4eb-422f-a303-7bfb55a95da3",
      "skipped": false
    },
    {
      "title": "正确截断字符串，如果超出字数限制，追加... ",
      "fullTitle": "#TextUtil._$ellipsisStrByLength() 正确截断字符串，如果超出字数限制，追加... ",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'中...'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'中文中文中文'</span>, <span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'Aa'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'Aa'</span>,<span class=\"hljs-number\">3</span>));<br>assert.equal(<span class=\"hljs-string\">'中文C...'</span>, TextUtil._$ellipsisStrByLength(<span class=\"hljs-string\">'中文CN'</span>, <span class=\"hljs-number\">5</span>));",
      "isRoot": false,
      "uuid": "82faa5e5-6308-4eb3-b07f-7d5bb41ee143",
      "parentUUID": "07430bcf-5654-4c26-84cb-4bb24b81ee4d",
      "skipped": false
    },
    {
      "title": "正确显示服务器时间",
      "fullTitle": "#TimeUtil._$getCurServerTime() 获取服务器时间 正确显示服务器时间",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(+<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>, timeUtil._$getCurServerTime());",
      "isRoot": false,
      "uuid": "762bb5da-9949-4554-a8d4-f743f026dffe",
      "parentUUID": "4175bd1d-00ea-4c07-986d-2d81d07e4265",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2016-01-06",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2016-01-06",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016-01-06'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>));",
      "isRoot": false,
      "uuid": "8689cb7a-1714-43f4-b21d-a74632a18580",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2016-01-06 22:02:25",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2016-01-06 22:02:25",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016-01-06 22:02:25'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd HH:mm:ss'</span>));",
      "isRoot": false,
      "uuid": "49c1400f-5a5f-4bbd-9ccd-4272ab8ca7f9",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2016年01月06日",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2016年01月06日",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016年01月06日'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>));",
      "isRoot": false,
      "uuid": "77b97919-9050-4a64-b26c-b590bef72901",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2016-1-6",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2016-1-6",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016-1-6'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-M-d'</span>));",
      "isRoot": false,
      "uuid": "2ed0d511-0c12-4d72-8595-d4e67a8d18e2",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 2014-11-26",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 2014-11-26",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2014-11-26'</span>, timeUtil._$formatTime(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-string\">'yyyy-M-d'</span>));",
      "isRoot": false,
      "uuid": "9df8815e-184b-4fc4-a195-a1d83820f277",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间 new Date().getTime",
      "fullTitle": "#TimeUtil._$formatTime() 正确格式化时间 new Date().getTime",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2016-5-6'</span>, timeUtil._$formatTime(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>().getTime(), <span class=\"hljs-string\">'yyyy-M-d'</span>));",
      "isRoot": false,
      "uuid": "00cf1d32-8f99-48d6-b891-5844d059de71",
      "parentUUID": "6568e2c5-c3f9-4425-8714-2a2994681e90",
      "skipped": false
    },
    {
      "title": "正确格式化时间段",
      "fullTitle": "#TimeUtil._$formatPeriod() 正确格式化时间段",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'2014-11-26 - 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>));<br>assert.equal(<span class=\"hljs-string\">'2014-11-26 - 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>));<br>assert.equal(<span class=\"hljs-string\">'2014-11-26 至 2016-01-06'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy-MM-dd'</span>, <span class=\"hljs-string\">' 至 '</span>));<br>assert.equal(<span class=\"hljs-string\">'2014年11月26日 至 2016年01月06日'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">1417011945458</span>, <span class=\"hljs-number\">1452088945458</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>, <span class=\"hljs-string\">' 至 '</span>));<br>assert.equal(<span class=\"hljs-string\">'待定'</span>, timeUtil._$formatPeriod(<span class=\"hljs-number\">32503651201000</span>, <span class=\"hljs-number\">32535187201000</span>, <span class=\"hljs-string\">'yyyy年MM月dd日'</span>, <span class=\"hljs-string\">' 至 '</span>));",
      "isRoot": false,
      "uuid": "0b0abda0-5889-4ea2-a8d9-3fd79d9fd6cb",
      "parentUUID": "fc840d27-dfde-4c38-805e-88d766967200",
      "skipped": false
    },
    {
      "title": "正确格式化倒计时时间",
      "fullTitle": "#TimeUtil._$formatTiktokTime() 正确格式化倒计时时间",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'58天18小时16分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1422088945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'2小时46分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417021945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'16分钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417012945458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-string\">'10秒钟'</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">1417011955458</span>, <span class=\"hljs-number\">1417011945458</span>));<br>assert.equal(<span class=\"hljs-literal\">null</span>, timeUtil._$formatTiktokTime(<span class=\"hljs-number\">141011945458</span>, <span class=\"hljs-number\">1417011945458</span>));",
      "isRoot": false,
      "uuid": "102ff1fd-603c-45b2-9693-39a9aee9f961",
      "parentUUID": "8daf6b32-d845-4459-ab9b-0f8c47cf977a",
      "skipped": false
    },
    {
      "title": "比较UMI是否正确",
      "fullTitle": "#urlUtil._$isRightUMI()  比较UMI是否正确",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/ewewe?qweqeqwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/ewewe?qweqe112qwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">true</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"/terer/ewewe?qweqe112qwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));<br>assert.equal(<span class=\"hljs-literal\">false</span>, urlUtil._$isRightUMI(<span class=\"hljs-string\">\"#/terer/eweweq?qweqeqwe\"</span>,<span class=\"hljs-string\">\"/terer/ewewe\"</span>));",
      "isRoot": false,
      "uuid": "cc5b751c-f00a-4887-aed0-dfe8bed95ec5",
      "parentUUID": "535f75f4-8d7f-4da0-b711-a14dbdc97f0a",
      "skipped": false
    },
    {
      "title": "比较UMI是否正确",
      "fullTitle": "#versionUtil._$versionCompare()  比较UMI是否正确",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.1.0\"</span>,<span class=\"hljs-string\">\"1.1.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">0</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.1\"</span>,<span class=\"hljs-string\">\"1.0.1\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.0.1\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"1.1.0\"</span>));<br>assert.equal(-<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"1.0.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"3.0.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"2.1.0\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));<br>assert.equal(<span class=\"hljs-number\">1</span>, versionUtil._$versionCompare(<span class=\"hljs-string\">\"2.0.1\"</span>,<span class=\"hljs-string\">\"2.0.0\"</span>));",
      "isRoot": false,
      "uuid": "e98fb17b-c128-4c72-8ae7-d7949c05541b",
      "parentUUID": "33bbbcf7-275b-4c6f-87a1-1d3467d4bec3",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}